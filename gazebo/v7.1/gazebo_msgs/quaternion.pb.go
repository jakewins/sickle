// Code generated by protoc-gen-go.
// source: quaternion.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Quaternion struct {
	X                *float64 `protobuf:"fixed64,2,req,name=x" json:"x,omitempty"`
	Y                *float64 `protobuf:"fixed64,3,req,name=y" json:"y,omitempty"`
	Z                *float64 `protobuf:"fixed64,4,req,name=z" json:"z,omitempty"`
	W                *float64 `protobuf:"fixed64,5,req,name=w" json:"w,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Quaternion) Reset()                    { *m = Quaternion{} }
func (m *Quaternion) String() string            { return proto.CompactTextString(m) }
func (*Quaternion) ProtoMessage()               {}
func (*Quaternion) Descriptor() ([]byte, []int) { return fileDescriptor85, []int{0} }

func (m *Quaternion) GetX() float64 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Quaternion) GetY() float64 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Quaternion) GetZ() float64 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *Quaternion) GetW() float64 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func init() {
	proto.RegisterType((*Quaternion)(nil), "gazebo.msgs.Quaternion")
}

func init() { proto.RegisterFile("quaternion.proto", fileDescriptor85) }

var fileDescriptor85 = []byte{
	// 89 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x2c, 0x4d, 0x2c,
	0x49, 0x2d, 0xca, 0xcb, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f,
	0xac, 0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x56, 0xb2, 0xe0, 0xe2, 0x0a, 0x84, 0x2b,
	0x10, 0xe2, 0xe4, 0x62, 0xac, 0x90, 0x60, 0x52, 0x60, 0xd2, 0x60, 0x04, 0x31, 0x2b, 0x25, 0x98,
	0x61, 0xcc, 0x2a, 0x09, 0x16, 0x18, 0xb3, 0x5c, 0x82, 0x15, 0xc4, 0x04, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x52, 0xbb, 0xd0, 0x08, 0x59, 0x00, 0x00, 0x00,
}
