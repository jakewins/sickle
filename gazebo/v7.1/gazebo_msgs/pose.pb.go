// Code generated by protoc-gen-go.
// source: pose.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Pose struct {
	Name             *string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id               *uint32     `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Position         *Vector3D   `protobuf:"bytes,3,req,name=position" json:"position,omitempty"`
	Orientation      *Quaternion `protobuf:"bytes,4,req,name=orientation" json:"orientation,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Pose) Reset()                    { *m = Pose{} }
func (m *Pose) String() string            { return proto.CompactTextString(m) }
func (*Pose) ProtoMessage()               {}
func (*Pose) Descriptor() ([]byte, []int) { return fileDescriptor75, []int{0} }

func (m *Pose) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Pose) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Pose) GetPosition() *Vector3D {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Pose) GetOrientation() *Quaternion {
	if m != nil {
		return m.Orientation
	}
	return nil
}

func init() {
	proto.RegisterType((*Pose)(nil), "gazebo.msgs.Pose")
}

func init() { proto.RegisterFile("pose.proto", fileDescriptor75) }

var fileDescriptor75 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc8, 0x2f, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f, 0xac, 0x4a, 0x4d, 0xca, 0xd7, 0xcb,
	0x2d, 0x4e, 0x2f, 0x96, 0xe2, 0x2b, 0x4b, 0x4d, 0x2e, 0xc9, 0x2f, 0x32, 0x4e, 0x81, 0x48, 0x4a,
	0x09, 0x14, 0x96, 0x26, 0x96, 0xa4, 0x16, 0xe5, 0x65, 0xe6, 0xe7, 0x41, 0x44, 0x94, 0xca, 0xb9,
	0x58, 0x02, 0x80, 0x9a, 0x85, 0x78, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x85, 0xb8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x98, 0x80, 0x6c, 0x5e, 0x21, 0x75, 0x2e,
	0x0e, 0xa0, 0xf1, 0x99, 0x25, 0x40, 0x3d, 0x12, 0xcc, 0x0a, 0x4c, 0x1a, 0xdc, 0x46, 0xa2, 0x7a,
	0x48, 0x76, 0xe8, 0x85, 0x41, 0xad, 0x10, 0xd2, 0xe1, 0xe2, 0xce, 0x2f, 0xca, 0x4c, 0xcd, 0x2b,
	0x49, 0x04, 0xab, 0x65, 0x01, 0xab, 0x15, 0x47, 0x51, 0x1b, 0x08, 0xb7, 0x1e, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x71, 0xe7, 0xab, 0x2d, 0xb4, 0x00, 0x00, 0x00,
}
