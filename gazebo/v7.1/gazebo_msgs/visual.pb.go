// Code generated by protoc-gen-go.
// source: visual.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Visual_Type int32

const (
	// / \brief Entity visual
	Visual_ENTITY Visual_Type = 0
	// / \brief Model visual
	Visual_MODEL Visual_Type = 1
	// / \brief Link visual
	Visual_LINK Visual_Type = 2
	// / \brief Visual visual
	Visual_VISUAL Visual_Type = 3
	// / \brief Collision visual
	Visual_COLLISION Visual_Type = 4
	// / \brief Sensor visual
	Visual_SENSOR Visual_Type = 5
	// / \brief GUI visual
	Visual_GUI Visual_Type = 6
	// / \brief Physics data visual
	Visual_PHYSICS Visual_Type = 7
)

var Visual_Type_name = map[int32]string{
	0: "ENTITY",
	1: "MODEL",
	2: "LINK",
	3: "VISUAL",
	4: "COLLISION",
	5: "SENSOR",
	6: "GUI",
	7: "PHYSICS",
}
var Visual_Type_value = map[string]int32{
	"ENTITY":    0,
	"MODEL":     1,
	"LINK":      2,
	"VISUAL":    3,
	"COLLISION": 4,
	"SENSOR":    5,
	"GUI":       6,
	"PHYSICS":   7,
}

func (x Visual_Type) Enum() *Visual_Type {
	p := new(Visual_Type)
	*p = x
	return p
}
func (x Visual_Type) String() string {
	return proto.EnumName(Visual_Type_name, int32(x))
}
func (x *Visual_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Visual_Type_value, data, "Visual_Type")
	if err != nil {
		return err
	}
	*x = Visual_Type(value)
	return nil
}
func (Visual_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor118, []int{0, 0} }

type Visual struct {
	Name         *string   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Id           *uint32   `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	ParentName   *string   `protobuf:"bytes,3,req,name=parent_name" json:"parent_name,omitempty"`
	ParentId     *uint32   `protobuf:"varint,4,opt,name=parent_id" json:"parent_id,omitempty"`
	CastShadows  *bool     `protobuf:"varint,5,opt,name=cast_shadows" json:"cast_shadows,omitempty"`
	Transparency *float64  `protobuf:"fixed64,6,opt,name=transparency" json:"transparency,omitempty"`
	LaserRetro   *float64  `protobuf:"fixed64,7,opt,name=laser_retro" json:"laser_retro,omitempty"`
	Pose         *Pose     `protobuf:"bytes,8,opt,name=pose" json:"pose,omitempty"`
	Geometry     *Geometry `protobuf:"bytes,9,opt,name=geometry" json:"geometry,omitempty"`
	Material     *Material `protobuf:"bytes,10,opt,name=material" json:"material,omitempty"`
	Visible      *bool     `protobuf:"varint,11,opt,name=visible" json:"visible,omitempty"`
	DeleteMe     *bool     `protobuf:"varint,12,opt,name=delete_me" json:"delete_me,omitempty"`
	IsStatic     *bool     `protobuf:"varint,13,opt,name=is_static" json:"is_static,omitempty"`
	Plugin       *Plugin   `protobuf:"bytes,14,opt,name=plugin" json:"plugin,omitempty"`
	Scale        *Vector3D `protobuf:"bytes,15,opt,name=scale" json:"scale,omitempty"`
	// / \brief Option meta information associated with this visual.
	Meta *Visual_Meta `protobuf:"bytes,16,opt,name=meta" json:"meta,omitempty"`
	// / \brief Type of visual.
	Type             *Visual_Type `protobuf:"varint,17,opt,name=type,enum=gazebo.msgs.Visual_Type" json:"type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Visual) Reset()                    { *m = Visual{} }
func (m *Visual) String() string            { return proto.CompactTextString(m) }
func (*Visual) ProtoMessage()               {}
func (*Visual) Descriptor() ([]byte, []int) { return fileDescriptor118, []int{0} }

func (m *Visual) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Visual) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Visual) GetParentName() string {
	if m != nil && m.ParentName != nil {
		return *m.ParentName
	}
	return ""
}

func (m *Visual) GetParentId() uint32 {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return 0
}

func (m *Visual) GetCastShadows() bool {
	if m != nil && m.CastShadows != nil {
		return *m.CastShadows
	}
	return false
}

func (m *Visual) GetTransparency() float64 {
	if m != nil && m.Transparency != nil {
		return *m.Transparency
	}
	return 0
}

func (m *Visual) GetLaserRetro() float64 {
	if m != nil && m.LaserRetro != nil {
		return *m.LaserRetro
	}
	return 0
}

func (m *Visual) GetPose() *Pose {
	if m != nil {
		return m.Pose
	}
	return nil
}

func (m *Visual) GetGeometry() *Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *Visual) GetMaterial() *Material {
	if m != nil {
		return m.Material
	}
	return nil
}

func (m *Visual) GetVisible() bool {
	if m != nil && m.Visible != nil {
		return *m.Visible
	}
	return false
}

func (m *Visual) GetDeleteMe() bool {
	if m != nil && m.DeleteMe != nil {
		return *m.DeleteMe
	}
	return false
}

func (m *Visual) GetIsStatic() bool {
	if m != nil && m.IsStatic != nil {
		return *m.IsStatic
	}
	return false
}

func (m *Visual) GetPlugin() *Plugin {
	if m != nil {
		return m.Plugin
	}
	return nil
}

func (m *Visual) GetScale() *Vector3D {
	if m != nil {
		return m.Scale
	}
	return nil
}

func (m *Visual) GetMeta() *Visual_Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Visual) GetType() Visual_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Visual_ENTITY
}

// / \brief Optional meta information for the visual. The information
// / contained within this element should be used to provide additional
// / feedback to an end user.
type Visual_Meta struct {
	// / \brief The layer in which this visual is displayed. The layer number
	// / is useful for programs, such as Gazebo, that put visuals in different
	// / layers for enhanced visualization.
	Layer            *int32 `protobuf:"varint,1,opt,name=layer" json:"layer,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Visual_Meta) Reset()                    { *m = Visual_Meta{} }
func (m *Visual_Meta) String() string            { return proto.CompactTextString(m) }
func (*Visual_Meta) ProtoMessage()               {}
func (*Visual_Meta) Descriptor() ([]byte, []int) { return fileDescriptor118, []int{0, 0} }

func (m *Visual_Meta) GetLayer() int32 {
	if m != nil && m.Layer != nil {
		return *m.Layer
	}
	return 0
}

func init() {
	proto.RegisterType((*Visual)(nil), "gazebo.msgs.Visual")
	proto.RegisterType((*Visual_Meta)(nil), "gazebo.msgs.Visual.Meta")
	proto.RegisterEnum("gazebo.msgs.Visual_Type", Visual_Type_name, Visual_Type_value)
}

func init() { proto.RegisterFile("visual.proto", fileDescriptor118) }

var fileDescriptor118 = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0x86, 0x6b, 0xb2, 0xb6, 0xf1, 0xd8, 0x90, 0x65, 0xd3, 0x48, 0x2b, 0x2e, 0x8d, 0xd2, 0xaa,
	0xe5, 0xc4, 0xa1, 0x7d, 0x82, 0x2a, 0x45, 0xa9, 0x55, 0x03, 0x51, 0x4d, 0x90, 0x72, 0xb2, 0x36,
	0xf6, 0x8a, 0x5a, 0x32, 0xd8, 0xda, 0xdd, 0xa4, 0xa2, 0xef, 0xd8, 0x77, 0xea, 0x78, 0xc1, 0x52,
	0x91, 0x38, 0xce, 0xff, 0x7f, 0x1e, 0xcf, 0x3f, 0xb3, 0x10, 0xbd, 0x96, 0xfa, 0x45, 0x54, 0xd3,
	0x46, 0xd5, 0xa6, 0x66, 0xe1, 0x46, 0xfc, 0x91, 0xcf, 0xf5, 0x74, 0xab, 0x37, 0x7a, 0x0c, 0x4d,
	0xad, 0xe5, 0xc1, 0x18, 0x0f, 0x37, 0xb2, 0xde, 0x4a, 0xa3, 0xf6, 0x5d, 0xbd, 0x15, 0x46, 0xaa,
	0xb2, 0xfb, 0x70, 0x1c, 0x35, 0xd5, 0xcb, 0xa6, 0xdc, 0x75, 0xee, 0xab, 0xcc, 0x4d, 0xad, 0xbe,
	0x14, 0x87, 0xfa, 0xf6, 0x2f, 0x01, 0x6f, 0x6d, 0xff, 0xc3, 0x22, 0x20, 0x3b, 0xb1, 0x95, 0xdc,
	0xb9, 0xe9, 0x4d, 0x02, 0x06, 0xd0, 0x2b, 0x0b, 0xde, 0xbb, 0x71, 0x26, 0x03, 0x76, 0x05, 0x61,
	0x23, 0x94, 0xdc, 0x99, 0xcc, 0x02, 0x17, 0x16, 0x18, 0x41, 0x70, 0x14, 0x91, 0x23, 0x96, 0x7b,
	0x0b, 0x51, 0x2e, 0xb4, 0xc9, 0xf4, 0x2f, 0x51, 0xd4, 0xbf, 0x35, 0x77, 0x51, 0xed, 0xb7, 0xaa,
	0x51, 0x62, 0xa7, 0x2d, 0x9d, 0xef, 0xb9, 0x87, 0xaa, 0xd3, 0xf6, 0xac, 0x84, 0x96, 0x2a, 0x53,
	0x38, 0x7b, 0xcd, 0x7d, 0x2b, 0xbe, 0x03, 0xd2, 0x26, 0xe3, 0x7d, 0xac, 0xc2, 0xcf, 0xa3, 0xe9,
	0x7f, 0x99, 0xa7, 0x0f, 0x68, 0xb0, 0x4f, 0xd0, 0xef, 0xe2, 0xf2, 0xc0, 0x42, 0xd7, 0x27, 0xd0,
	0xfd, 0xd1, 0x6c, 0xc1, 0x6e, 0x0f, 0x1c, 0xce, 0x80, 0xf3, 0xa3, 0xc9, 0x2e, 0xc1, 0xc7, 0x3d,
	0x97, 0xcf, 0x95, 0xe4, 0xa1, 0x1d, 0x17, 0x73, 0x15, 0xb2, 0x92, 0x46, 0x66, 0x18, 0x35, 0xea,
	0xa4, 0x52, 0x67, 0xda, 0x08, 0x53, 0xe6, 0x7c, 0x60, 0xa5, 0xf7, 0xe0, 0x1d, 0xf6, 0xca, 0x87,
	0xb6, 0xfb, 0xd5, 0xe9, 0xac, 0xd6, 0x62, 0x1f, 0xc0, 0xd5, 0xb9, 0xc0, 0xce, 0x97, 0x67, 0x26,
	0x58, 0x1f, 0x0f, 0xc1, 0x3e, 0x02, 0xc1, 0x99, 0x05, 0xa7, 0x16, 0xe2, 0xa7, 0xd0, 0xe1, 0x09,
	0xcc, 0xd1, 0x6f, 0x39, 0xb3, 0x6f, 0x24, 0x1f, 0x21, 0x37, 0x3c, 0xcf, 0xad, 0xd0, 0x1f, 0x5f,
	0x03, 0xb1, 0xfc, 0x00, 0xdc, 0x4a, 0xec, 0xa5, 0xc2, 0x83, 0x3a, 0x13, 0xf7, 0xb6, 0x00, 0xd2,
	0xda, 0x78, 0x58, 0x6f, 0xb6, 0x58, 0xc5, 0xab, 0x27, 0xfa, 0x86, 0x05, 0xe0, 0xce, 0x97, 0xdf,
	0x66, 0x09, 0x75, 0x58, 0x1f, 0x48, 0x12, 0x2f, 0x7e, 0xd0, 0x5e, 0x0b, 0xac, 0xe3, 0xf4, 0xf1,
	0x6b, 0x42, 0x2f, 0xb0, 0x47, 0x70, 0xb7, 0x4c, 0x92, 0x38, 0x8d, 0x97, 0x0b, 0x4a, 0x5a, 0x2b,
	0x9d, 0x2d, 0xd2, 0xe5, 0x4f, 0xea, 0x32, 0x1f, 0x2e, 0xee, 0x1f, 0x63, 0xea, 0xb1, 0x10, 0xfc,
	0x87, 0xef, 0x4f, 0x69, 0x7c, 0x97, 0x52, 0xff, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x58, 0xd1,
	0x41, 0x3b, 0xb5, 0x02, 0x00, 0x00,
}
