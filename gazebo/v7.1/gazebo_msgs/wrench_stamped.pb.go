// Code generated by protoc-gen-go.
// source: wrench_stamped.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type WrenchStamped struct {
	// Time when the data was captured
	Time             *Time   `protobuf:"bytes,1,req,name=time" json:"time,omitempty"`
	Wrench           *Wrench `protobuf:"bytes,2,req,name=wrench" json:"wrench,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WrenchStamped) Reset()                    { *m = WrenchStamped{} }
func (m *WrenchStamped) String() string            { return proto.CompactTextString(m) }
func (*WrenchStamped) ProtoMessage()               {}
func (*WrenchStamped) Descriptor() ([]byte, []int) { return fileDescriptor127, []int{0} }

func (m *WrenchStamped) GetTime() *Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *WrenchStamped) GetWrench() *Wrench {
	if m != nil {
		return m.Wrench
	}
	return nil
}

func init() {
	proto.RegisterType((*WrenchStamped)(nil), "gazebo.msgs.WrenchStamped")
}

func init() { proto.RegisterFile("wrench_stamped.proto", fileDescriptor127) }

var fileDescriptor127 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x2f, 0x4a, 0xcd,
	0x4b, 0xce, 0x88, 0x2f, 0x2e, 0x49, 0xcc, 0x2d, 0x48, 0x4d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x4e, 0x4f, 0xac, 0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x96, 0xe2, 0x2a,
	0xc9, 0xcc, 0x4d, 0x85, 0x48, 0x48, 0xf1, 0x40, 0x94, 0x43, 0x78, 0x4a, 0xa1, 0x5c, 0xbc, 0xe1,
	0x60, 0x7e, 0x30, 0x44, 0xb7, 0x90, 0x3c, 0x17, 0x0b, 0x48, 0xb1, 0x04, 0xa3, 0x02, 0x93, 0x06,
	0xb7, 0x91, 0xa0, 0x1e, 0x92, 0x31, 0x7a, 0x21, 0x40, 0x09, 0x21, 0x65, 0x2e, 0x36, 0x88, 0x09,
	0x12, 0x4c, 0x60, 0x25, 0xc2, 0x28, 0x4a, 0x20, 0x86, 0x01, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbf,
	0x8d, 0xa5, 0xa3, 0x94, 0x00, 0x00, 0x00,
}
