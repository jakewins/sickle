// Code generated by protoc-gen-go.
// source: link.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Link struct {
	Id          *uint32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        *string      `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	SelfCollide *bool        `protobuf:"varint,3,opt,name=self_collide" json:"self_collide,omitempty"`
	Gravity     *bool        `protobuf:"varint,4,opt,name=gravity" json:"gravity,omitempty"`
	Kinematic   *bool        `protobuf:"varint,5,opt,name=kinematic" json:"kinematic,omitempty"`
	Enabled     *bool        `protobuf:"varint,6,opt,name=enabled" json:"enabled,omitempty"`
	Density     *Density     `protobuf:"bytes,7,opt,name=density" json:"density,omitempty"`
	Inertial    *Inertial    `protobuf:"bytes,8,opt,name=inertial" json:"inertial,omitempty"`
	Pose        *Pose        `protobuf:"bytes,9,opt,name=pose" json:"pose,omitempty"`
	Visual      []*Visual    `protobuf:"bytes,10,rep,name=visual" json:"visual,omitempty"`
	Collision   []*Collision `protobuf:"bytes,11,rep,name=collision" json:"collision,omitempty"`
	Sensor      []*Sensor    `protobuf:"bytes,12,rep,name=sensor" json:"sensor,omitempty"`
	Projector   []*Projector `protobuf:"bytes,13,rep,name=projector" json:"projector,omitempty"`
	Canonical   *bool        `protobuf:"varint,14,opt,name=canonical" json:"canonical,omitempty"`
	// / \brief An optional vector of batteries that are attached to this link.
	Battery []*Battery `protobuf:"bytes,15,rep,name=battery" json:"battery,omitempty"`
	// / \brief Enable/disable wind effect on this link.
	EnableWind *bool `protobuf:"varint,16,opt,name=enable_wind" json:"enable_wind,omitempty"`
	// / \brief Wind linear velocity affecting this link.
	Wind             *Vector3D `protobuf:"bytes,17,opt,name=wind" json:"wind,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Link) Reset()                    { *m = Link{} }
func (m *Link) String() string            { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()               {}
func (*Link) Descriptor() ([]byte, []int) { return fileDescriptor52, []int{0} }

func (m *Link) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Link) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Link) GetSelfCollide() bool {
	if m != nil && m.SelfCollide != nil {
		return *m.SelfCollide
	}
	return false
}

func (m *Link) GetGravity() bool {
	if m != nil && m.Gravity != nil {
		return *m.Gravity
	}
	return false
}

func (m *Link) GetKinematic() bool {
	if m != nil && m.Kinematic != nil {
		return *m.Kinematic
	}
	return false
}

func (m *Link) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Link) GetDensity() *Density {
	if m != nil {
		return m.Density
	}
	return nil
}

func (m *Link) GetInertial() *Inertial {
	if m != nil {
		return m.Inertial
	}
	return nil
}

func (m *Link) GetPose() *Pose {
	if m != nil {
		return m.Pose
	}
	return nil
}

func (m *Link) GetVisual() []*Visual {
	if m != nil {
		return m.Visual
	}
	return nil
}

func (m *Link) GetCollision() []*Collision {
	if m != nil {
		return m.Collision
	}
	return nil
}

func (m *Link) GetSensor() []*Sensor {
	if m != nil {
		return m.Sensor
	}
	return nil
}

func (m *Link) GetProjector() []*Projector {
	if m != nil {
		return m.Projector
	}
	return nil
}

func (m *Link) GetCanonical() bool {
	if m != nil && m.Canonical != nil {
		return *m.Canonical
	}
	return false
}

func (m *Link) GetBattery() []*Battery {
	if m != nil {
		return m.Battery
	}
	return nil
}

func (m *Link) GetEnableWind() bool {
	if m != nil && m.EnableWind != nil {
		return *m.EnableWind
	}
	return false
}

func (m *Link) GetWind() *Vector3D {
	if m != nil {
		return m.Wind
	}
	return nil
}

func init() {
	proto.RegisterType((*Link)(nil), "gazebo.msgs.Link")
}

func init() { proto.RegisterFile("link.proto", fileDescriptor52) }

var fileDescriptor52 = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x6e, 0xe2, 0x30,
	0x10, 0x86, 0x05, 0x64, 0x81, 0x4c, 0x02, 0x2c, 0x86, 0x5d, 0x8d, 0xb8, 0x14, 0x15, 0x55, 0xa5,
	0x97, 0x1c, 0xda, 0x37, 0x68, 0x7b, 0xa9, 0xd4, 0x03, 0x52, 0x25, 0xae, 0xc8, 0x24, 0x2e, 0x72,
	0x09, 0x36, 0x8a, 0x5d, 0xaa, 0xf6, 0xa9, 0xfb, 0x08, 0x75, 0xec, 0x38, 0x6a, 0x24, 0x4e, 0x30,
	0xf3, 0x7f, 0xf3, 0x67, 0xfc, 0x0f, 0x40, 0xce, 0xc5, 0x3e, 0x39, 0x16, 0x52, 0x4b, 0x12, 0xed,
	0xe8, 0x17, 0xdb, 0xca, 0xe4, 0xa0, 0x76, 0x6a, 0x36, 0xe4, 0x82, 0x15, 0x9a, 0xd3, 0xdc, 0x89,
	0xb3, 0x51, 0x2a, 0xf3, 0x9c, 0x2b, 0x2e, 0x45, 0xd5, 0x88, 0x4f, 0x5c, 0xbd, 0xd7, 0x72, 0xac,
	0x98, 0x50, 0xb2, 0xf0, 0xb0, 0xf9, 0x79, 0x63, 0xa9, 0xae, 0x1b, 0x70, 0x94, 0x8a, 0x55, 0xff,
	0x07, 0x5b, 0xaa, 0x35, 0x2b, 0x3e, 0x7d, 0x99, 0x99, 0x49, 0xae, 0x7d, 0x39, 0x3c, 0xd9, 0xb9,
	0xbb, 0xcc, 0xd5, 0x97, 0xdf, 0x1d, 0x08, 0x9e, 0xcd, 0x8e, 0x04, 0xa0, 0xcd, 0x33, 0x6c, 0xcd,
	0x5b, 0xcb, 0x01, 0x89, 0x21, 0x10, 0xf4, 0xc0, 0xb0, 0x3d, 0x6f, 0x2f, 0x43, 0x32, 0x05, 0xf3,
	0xf5, 0xfc, 0x75, 0x63, 0x37, 0xcc, 0x18, 0x76, 0x0c, 0xd3, 0x27, 0x23, 0xe8, 0xed, 0x0a, 0x7a,
	0x32, 0xce, 0x18, 0xd8, 0xc6, 0x18, 0xc2, 0xbd, 0x79, 0xd4, 0x81, 0x6a, 0x9e, 0xe2, 0x1f, 0xcf,
	0x30, 0x41, 0xb7, 0x39, 0xcb, 0xb0, 0x6b, 0x1b, 0x57, 0xd0, 0xab, 0xd6, 0xc1, 0x9e, 0x69, 0x44,
	0xb7, 0xd3, 0xe4, 0x57, 0x28, 0xc9, 0xa3, 0xd3, 0xc8, 0x35, 0xf4, 0x7d, 0x3c, 0xd8, 0xb7, 0xdc,
	0xbf, 0x06, 0xf7, 0x54, 0x89, 0xe4, 0x02, 0x82, 0xf2, 0xe5, 0x18, 0x5a, 0x68, 0xdc, 0x80, 0x56,
	0x46, 0x20, 0x0b, 0xe8, 0xba, 0x1c, 0x11, 0xe6, 0x1d, 0x83, 0x4c, 0x1a, 0xc8, 0xda, 0x4a, 0xe4,
	0x06, 0xc2, 0x3a, 0x7d, 0x8c, 0x2c, 0xf7, 0xbf, 0xc1, 0x3d, 0x78, 0xb5, 0xf4, 0x73, 0x97, 0xc0,
	0xf8, 0x8c, 0xdf, 0x8b, 0x95, 0x4a, 0xbf, 0xfa, 0x40, 0x38, 0x38, 0xe3, 0xb7, 0xf2, 0x6a, 0x19,
	0x5a, 0x4a, 0x85, 0x14, 0x3c, 0x35, 0x2b, 0x0e, 0x7d, 0x46, 0xd5, 0x05, 0x71, 0x64, 0x67, 0x9b,
	0x19, 0xdd, 0x3b, 0x8d, 0x4c, 0x20, 0x72, 0xd9, 0x6e, 0x3e, 0xb8, 0xc8, 0xf0, 0xaf, 0x9d, 0x5d,
	0x40, 0x60, 0xab, 0xf1, 0x99, 0xd0, 0xd6, 0xd5, 0xe1, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6a,
	0xe1, 0x94, 0xb7, 0x94, 0x02, 0x00, 0x00,
}
