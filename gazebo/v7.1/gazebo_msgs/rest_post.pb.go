// Code generated by protoc-gen-go.
// source: rest_post.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RestPost struct {
	// / \brief ID of this request message
	Id *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// / \brief Route to post to.
	Route *string `protobuf:"bytes,2,req,name=route" json:"route,omitempty"`
	// / \brief Data to post in JSON format
	Json             *string `protobuf:"bytes,3,req,name=json" json:"json,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RestPost) Reset()                    { *m = RestPost{} }
func (m *RestPost) String() string            { return proto.CompactTextString(m) }
func (*RestPost) ProtoMessage()               {}
func (*RestPost) Descriptor() ([]byte, []int) { return fileDescriptor91, []int{0} }

func (m *RestPost) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RestPost) GetRoute() string {
	if m != nil && m.Route != nil {
		return *m.Route
	}
	return ""
}

func (m *RestPost) GetJson() string {
	if m != nil && m.Json != nil {
		return *m.Json
	}
	return ""
}

func init() {
	proto.RegisterType((*RestPost)(nil), "gazebo.msgs.RestPost")
}

func init() { proto.RegisterFile("rest_post.proto", fileDescriptor91) }

var fileDescriptor91 = []byte{
	// 103 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x4a, 0x2d, 0x2e,
	0x89, 0x2f, 0xc8, 0x2f, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f, 0xac,
	0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x56, 0x32, 0xe6, 0xe2, 0x08, 0x02, 0xca, 0x07,
	0x00, 0xa5, 0x85, 0xb8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x85, 0x78,
	0xb9, 0x58, 0x8b, 0xf2, 0x4b, 0x4b, 0x52, 0x25, 0x98, 0x14, 0x98, 0x34, 0x38, 0x85, 0x78, 0xb8,
	0x58, 0xb2, 0x8a, 0xf3, 0xf3, 0x24, 0x98, 0x41, 0x3c, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3e,
	0xdc, 0x17, 0x26, 0x53, 0x00, 0x00, 0x00,
}
