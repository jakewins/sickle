// Code generated by protoc-gen-go.
// source: scene.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Scene struct {
	Name       *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Ambient    *Color   `protobuf:"bytes,2,opt,name=ambient" json:"ambient,omitempty"`
	Background *Color   `protobuf:"bytes,3,opt,name=background" json:"background,omitempty"`
	Sky        *Sky     `protobuf:"bytes,4,opt,name=sky" json:"sky,omitempty"`
	Shadows    *bool    `protobuf:"varint,5,opt,name=shadows,def=1" json:"shadows,omitempty"`
	Fog        *Fog     `protobuf:"bytes,6,opt,name=fog" json:"fog,omitempty"`
	Grid       *bool    `protobuf:"varint,7,opt,name=grid" json:"grid,omitempty"`
	Model      []*Model `protobuf:"bytes,8,rep,name=model" json:"model,omitempty"`
	Light      []*Light `protobuf:"bytes,9,rep,name=light" json:"light,omitempty"`
	Joint      []*Joint `protobuf:"bytes,10,rep,name=joint" json:"joint,omitempty"`
	// / \brief Show/hide world origin indicator.
	OriginVisual     *bool  `protobuf:"varint,11,opt,name=origin_visual" json:"origin_visual,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Scene) Reset()                    { *m = Scene{} }
func (m *Scene) String() string            { return proto.CompactTextString(m) }
func (*Scene) ProtoMessage()               {}
func (*Scene) Descriptor() ([]byte, []int) { return fileDescriptor94, []int{0} }

const Default_Scene_Shadows bool = true

func (m *Scene) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Scene) GetAmbient() *Color {
	if m != nil {
		return m.Ambient
	}
	return nil
}

func (m *Scene) GetBackground() *Color {
	if m != nil {
		return m.Background
	}
	return nil
}

func (m *Scene) GetSky() *Sky {
	if m != nil {
		return m.Sky
	}
	return nil
}

func (m *Scene) GetShadows() bool {
	if m != nil && m.Shadows != nil {
		return *m.Shadows
	}
	return Default_Scene_Shadows
}

func (m *Scene) GetFog() *Fog {
	if m != nil {
		return m.Fog
	}
	return nil
}

func (m *Scene) GetGrid() bool {
	if m != nil && m.Grid != nil {
		return *m.Grid
	}
	return false
}

func (m *Scene) GetModel() []*Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *Scene) GetLight() []*Light {
	if m != nil {
		return m.Light
	}
	return nil
}

func (m *Scene) GetJoint() []*Joint {
	if m != nil {
		return m.Joint
	}
	return nil
}

func (m *Scene) GetOriginVisual() bool {
	if m != nil && m.OriginVisual != nil {
		return *m.OriginVisual
	}
	return false
}

func init() {
	proto.RegisterType((*Scene)(nil), "gazebo.msgs.Scene")
}

func init() { proto.RegisterFile("scene.proto", fileDescriptor94) }

var fileDescriptor94 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xd9, 0xfe, 0xb1, 0xdb, 0x44, 0x41, 0x02, 0xc2, 0xb0, 0x20, 0x54, 0x05, 0xd9, 0x53,
	0x0f, 0x1e, 0xbd, 0x0a, 0x1e, 0x44, 0x4f, 0xfb, 0x01, 0x24, 0x6d, 0x63, 0x36, 0xb6, 0xcd, 0x48,
	0xd2, 0x2a, 0xeb, 0xf7, 0xf3, 0x7b, 0xd9, 0xe9, 0x5a, 0x51, 0xac, 0xb7, 0x19, 0xde, 0xef, 0xf1,
	0xde, 0x0c, 0xe3, 0xbe, 0x54, 0x56, 0xe5, 0x2f, 0x0e, 0x3b, 0x14, 0x5c, 0xcb, 0x77, 0x55, 0x60,
	0xde, 0x7a, 0xed, 0x57, 0xbc, 0xc4, 0x06, 0xdd, 0x5e, 0x59, 0xa5, 0x4f, 0xa8, 0xa7, 0xd1, 0xd7,
	0xbb, 0xaf, 0x91, 0x37, 0x46, 0x6f, 0xbb, 0x69, 0x79, 0x46, 0x63, 0xbf, 0x97, 0x16, 0x2b, 0xd5,
	0xec, 0x97, 0xf3, 0x8f, 0x80, 0xc5, 0x1b, 0x8a, 0x11, 0x87, 0x2c, 0xb2, 0xb2, 0x55, 0xb0, 0xc8,
	0x82, 0x75, 0x2a, 0x2e, 0x58, 0x22, 0xdb, 0xc2, 0x28, 0xdb, 0x41, 0x90, 0x2d, 0xd6, 0xfc, 0x4a,
	0xe4, 0x3f, 0x0a, 0xe4, 0x37, 0x94, 0x2f, 0x2e, 0x19, 0x2b, 0x64, 0x59, 0x6b, 0x87, 0xbd, 0xad,
	0x20, 0xfc, 0x97, 0x3b, 0x65, 0xe1, 0x50, 0x0c, 0xa2, 0x11, 0x38, 0xfe, 0x05, 0x6c, 0xea, 0x9d,
	0x38, 0x61, 0x89, 0xdf, 0xca, 0x0a, 0xdf, 0x3c, 0xc4, 0x03, 0xb2, 0xbc, 0x8e, 0x3a, 0xd7, 0x2b,
	0x72, 0x0d, 0x97, 0xc1, 0xc1, 0x8c, 0xeb, 0x16, 0x35, 0xf5, 0xd5, 0xce, 0x54, 0x90, 0x90, 0x45,
	0x9c, 0xb1, 0x78, 0x3c, 0x0b, 0x96, 0x59, 0xf8, 0xa7, 0xc5, 0x03, 0x29, 0x84, 0x8c, 0x3f, 0x81,
	0x74, 0x06, 0xb9, 0x27, 0x85, 0x90, 0xf1, 0x53, 0xc0, 0x66, 0x90, 0x3b, 0x52, 0x86, 0xb2, 0x47,
	0xe8, 0x8c, 0x36, 0xf6, 0xf1, 0xd5, 0xf8, 0x5e, 0x36, 0xc0, 0x29, 0xff, 0x33, 0x00, 0x00, 0xff,
	0xff, 0xf5, 0x9c, 0xef, 0xa0, 0xac, 0x01, 0x00, 0x00,
}
