// Code generated by protoc-gen-go.
// source: rest_login.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RestLogin struct {
	// / \brief ID of this request message
	Id *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// / \brief Rest service URL
	Url *string `protobuf:"bytes,2,req,name=url" json:"url,omitempty"`
	// / \brief Login user name
	Username *string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	// / \brief Login password
	Password         *string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RestLogin) Reset()                    { *m = RestLogin{} }
func (m *RestLogin) String() string            { return proto.CompactTextString(m) }
func (*RestLogin) ProtoMessage()               {}
func (*RestLogin) Descriptor() ([]byte, []int) { return fileDescriptor89, []int{0} }

func (m *RestLogin) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RestLogin) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *RestLogin) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *RestLogin) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*RestLogin)(nil), "gazebo.msgs.RestLogin")
}

func init() { proto.RegisterFile("rest_login.proto", fileDescriptor89) }

var fileDescriptor89 = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x4a, 0x2d, 0x2e,
	0x89, 0xcf, 0xc9, 0x4f, 0xcf, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f,
	0xac, 0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x56, 0xf2, 0xe0, 0xe2, 0x0c, 0x02, 0x2a,
	0xf0, 0x01, 0xc9, 0x0b, 0x71, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x0a,
	0x71, 0x73, 0x31, 0x97, 0x16, 0xe5, 0x48, 0x30, 0x29, 0x30, 0x69, 0x70, 0x0a, 0x09, 0x70, 0x71,
	0x94, 0x16, 0xa7, 0x16, 0xe5, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x03, 0xa5, 0xc1, 0x22, 0x05, 0x89,
	0xc5, 0xc5, 0xe5, 0xf9, 0x45, 0x29, 0x12, 0x2c, 0x20, 0x11, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x9d, 0x04, 0xa5, 0x50, 0x69, 0x00, 0x00, 0x00,
}
