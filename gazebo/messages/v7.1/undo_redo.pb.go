// Code generated by protoc-gen-go.
// source: undo_redo.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UndoRedo struct {
	// / \brief True to undo, false to redo.
	Undo *bool `protobuf:"varint,1,req,name=undo" json:"undo,omitempty"`
	// / \brief Unique id of the user command. If this is provided, all commands
	// / leading to that will be undone / redone.
	Id               *uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UndoRedo) Reset()                    { *m = UndoRedo{} }
func (m *UndoRedo) String() string            { return proto.CompactTextString(m) }
func (*UndoRedo) ProtoMessage()               {}
func (*UndoRedo) Descriptor() ([]byte, []int) { return fileDescriptor113, []int{0} }

func (m *UndoRedo) GetUndo() bool {
	if m != nil && m.Undo != nil {
		return *m.Undo
	}
	return false
}

func (m *UndoRedo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*UndoRedo)(nil), "gazebo.msgs.UndoRedo")
}

func init() { proto.RegisterFile("undo_redo.proto", fileDescriptor113) }

var fileDescriptor113 = []byte{
	// 88 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xcd, 0x4b, 0xc9,
	0x8f, 0x2f, 0x4a, 0x4d, 0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f, 0xac,
	0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x56, 0x52, 0xe1, 0xe2, 0x08, 0x05, 0xca, 0x07,
	0x01, 0xa5, 0x85, 0x78, 0xb8, 0x58, 0x40, 0x6a, 0x25, 0x18, 0x15, 0x98, 0x34, 0x38, 0x84, 0xb8,
	0xb8, 0x98, 0x32, 0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x78, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xea, 0x24, 0x91, 0xa2, 0x44, 0x00, 0x00, 0x00,
}
