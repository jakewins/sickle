// Code generated by protoc-gen-go.
// source: model.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Model struct {
	Name        *string   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Id          *uint32   `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	IsStatic    *bool     `protobuf:"varint,3,opt,name=is_static" json:"is_static,omitempty"`
	Pose        *Pose     `protobuf:"bytes,4,opt,name=pose" json:"pose,omitempty"`
	Joint       []*Joint  `protobuf:"bytes,5,rep,name=joint" json:"joint,omitempty"`
	Link        []*Link   `protobuf:"bytes,6,rep,name=link" json:"link,omitempty"`
	Deleted     *bool     `protobuf:"varint,7,opt,name=deleted" json:"deleted,omitempty"`
	Visual      []*Visual `protobuf:"bytes,8,rep,name=visual" json:"visual,omitempty"`
	Scale       *Vector3D `protobuf:"bytes,9,opt,name=scale" json:"scale,omitempty"`
	SelfCollide *bool     `protobuf:"varint,10,opt,name=self_collide" json:"self_collide,omitempty"`
	// / \brief Enable/disable wind effect on this model.
	EnableWind *bool `protobuf:"varint,11,opt,name=enable_wind" json:"enable_wind,omitempty"`
	// / \brief An array of nested models.
	Model []*Model `protobuf:"bytes,12,rep,name=model" json:"model,omitempty"`
	// / \brief An array of plugins.
	Plugin           []*Plugin `protobuf:"bytes,13,rep,name=plugin" json:"plugin,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Model) Reset()                    { *m = Model{} }
func (m *Model) String() string            { return proto.CompactTextString(m) }
func (*Model) ProtoMessage()               {}
func (*Model) Descriptor() ([]byte, []int) { return fileDescriptor63, []int{0} }

func (m *Model) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Model) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Model) GetIsStatic() bool {
	if m != nil && m.IsStatic != nil {
		return *m.IsStatic
	}
	return false
}

func (m *Model) GetPose() *Pose {
	if m != nil {
		return m.Pose
	}
	return nil
}

func (m *Model) GetJoint() []*Joint {
	if m != nil {
		return m.Joint
	}
	return nil
}

func (m *Model) GetLink() []*Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Model) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return false
}

func (m *Model) GetVisual() []*Visual {
	if m != nil {
		return m.Visual
	}
	return nil
}

func (m *Model) GetScale() *Vector3D {
	if m != nil {
		return m.Scale
	}
	return nil
}

func (m *Model) GetSelfCollide() bool {
	if m != nil && m.SelfCollide != nil {
		return *m.SelfCollide
	}
	return false
}

func (m *Model) GetEnableWind() bool {
	if m != nil && m.EnableWind != nil {
		return *m.EnableWind
	}
	return false
}

func (m *Model) GetModel() []*Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *Model) GetPlugin() []*Plugin {
	if m != nil {
		return m.Plugin
	}
	return nil
}

func init() {
	proto.RegisterType((*Model)(nil), "gazebo.msgs.Model")
}

func init() { proto.RegisterFile("model.proto", fileDescriptor63) }

var fileDescriptor63 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xcb, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0xd5, 0xb4, 0xe9, 0x65, 0x9c, 0xfe, 0xbf, 0xea, 0x82, 0x34, 0xea, 0x86, 0x72, 0x59,
	0x74, 0x95, 0x05, 0xbc, 0x05, 0x02, 0xa9, 0x2b, 0xb6, 0x95, 0x1b, 0x0f, 0x91, 0xc1, 0xb1, 0xa3,
	0xda, 0x2d, 0x12, 0x4f, 0xcc, 0x63, 0xe0, 0x38, 0xa9, 0x44, 0xa4, 0xee, 0x62, 0x7f, 0xc7, 0x73,
	0xce, 0x99, 0x00, 0xab, 0xac, 0x24, 0x9d, 0xd7, 0x07, 0xeb, 0x2d, 0x67, 0xa5, 0xf8, 0xa6, 0xbd,
	0xcd, 0x2b, 0x57, 0xba, 0x15, 0xfb, 0xb0, 0xca, 0xf8, 0x96, 0xac, 0x40, 0x2b, 0xf3, 0xd9, 0x7d,
	0x67, 0xb5, 0x3e, 0x96, 0xca, 0x9c, 0x49, 0x6d, 0x1d, 0x9d, 0xc9, 0x49, 0xb9, 0xa3, 0xe8, 0xa6,
	0xad, 0xfe, 0x9d, 0xa8, 0xf0, 0xf6, 0xf0, 0x24, 0xdb, 0xf3, 0xdd, 0x4f, 0x02, 0xe9, 0x6b, 0xe3,
	0xc6, 0x33, 0x18, 0x19, 0x51, 0x11, 0x0e, 0xd6, 0xc9, 0x66, 0xc6, 0x01, 0x12, 0x25, 0x31, 0x59,
	0x0f, 0x36, 0x73, 0xbe, 0x80, 0x99, 0x72, 0x3b, 0xe7, 0x85, 0x57, 0x05, 0x0e, 0xc3, 0xd5, 0x94,
	0xdf, 0xc0, 0xa8, 0xb1, 0xc0, 0x51, 0x38, 0xb1, 0xc7, 0x45, 0xfe, 0x27, 0x63, 0xbe, 0x0d, 0x80,
	0xdf, 0x42, 0x1a, 0xa3, 0x62, 0xba, 0x1e, 0x06, 0x05, 0xef, 0x29, 0x9e, 0x1b, 0xd2, 0xcc, 0x68,
	0x0a, 0xe0, 0x38, 0x2a, 0xfa, 0x33, 0x5e, 0x02, 0xe0, 0xff, 0x61, 0x12, 0x82, 0x91, 0x27, 0x89,
	0x93, 0xe8, 0x7a, 0x0f, 0xe3, 0xb6, 0x0c, 0x4e, 0xe3, 0x9b, 0x65, 0xef, 0xcd, 0x5b, 0x44, 0xfc,
	0x01, 0x52, 0x57, 0x08, 0x4d, 0x38, 0x8b, 0xd9, 0xae, 0xfb, 0x9a, 0xae, 0x3d, 0xbf, 0x82, 0xcc,
	0x91, 0x7e, 0xdf, 0x15, 0x56, 0x6b, 0x25, 0x09, 0x21, 0x1a, 0x2c, 0x81, 0x91, 0x11, 0x7b, 0x4d,
	0xbb, 0x2f, 0x65, 0x24, 0xb2, 0x78, 0x19, 0xaa, 0xc4, 0xff, 0x81, 0xd9, 0x85, 0x2a, 0xed, 0xee,
	0x42, 0xb0, 0x76, 0xff, 0x38, 0xbf, 0x10, 0x6c, 0x1b, 0xd1, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x36, 0x6a, 0x9c, 0x6a, 0xd6, 0x01, 0x00, 0x00,
}
