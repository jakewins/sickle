// Code generated by protoc-gen-go.
// source: topic_info.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TopicInfo struct {
	MsgType          *string      `protobuf:"bytes,1,req,name=msg_type" json:"msg_type,omitempty"`
	Publisher        []*Publish   `protobuf:"bytes,2,rep,name=publisher" json:"publisher,omitempty"`
	Subscriber       []*Subscribe `protobuf:"bytes,3,rep,name=subscriber" json:"subscriber,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *TopicInfo) Reset()                    { *m = TopicInfo{} }
func (m *TopicInfo) String() string            { return proto.CompactTextString(m) }
func (*TopicInfo) ProtoMessage()               {}
func (*TopicInfo) Descriptor() ([]byte, []int) { return fileDescriptor111, []int{0} }

func (m *TopicInfo) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *TopicInfo) GetPublisher() []*Publish {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *TopicInfo) GetSubscriber() []*Subscribe {
	if m != nil {
		return m.Subscriber
	}
	return nil
}

func init() {
	proto.RegisterType((*TopicInfo)(nil), "gazebo.msgs.TopicInfo")
}

func init() { proto.RegisterFile("topic_info.proto", fileDescriptor111) }

var fileDescriptor111 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x28, 0xc9, 0x2f, 0xc8,
	0x4c, 0x8e, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f,
	0xac, 0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x96, 0xe2, 0x2d, 0x28, 0x4d, 0xca, 0xc9,
	0x2c, 0xce, 0x80, 0xc8, 0x49, 0xf1, 0x17, 0x97, 0x26, 0x15, 0x27, 0x17, 0x65, 0x26, 0xa5, 0x42,
	0x04, 0x94, 0x8a, 0xb8, 0x38, 0x43, 0x40, 0x06, 0x78, 0x02, 0xf5, 0x0b, 0x09, 0x70, 0x71, 0x00,
	0x35, 0xc5, 0x97, 0x54, 0x16, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x69, 0x70, 0x0a, 0xa9, 0x73, 0x71,
	0x42, 0x0d, 0x48, 0x2d, 0x92, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x36, 0x12, 0xd1, 0x43, 0x32, 0x5f,
	0x2f, 0x00, 0x22, 0x2b, 0xa4, 0xc5, 0xc5, 0x05, 0x37, 0xba, 0x48, 0x82, 0x19, 0xac, 0x52, 0x0c,
	0x45, 0x65, 0x30, 0x4c, 0x1a, 0x10, 0x00, 0x00, 0xff, 0xff, 0x85, 0x55, 0xfd, 0x9f, 0xb3, 0x00,
	0x00, 0x00,
}
