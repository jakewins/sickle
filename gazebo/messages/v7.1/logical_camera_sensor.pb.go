// Code generated by protoc-gen-go.
// source: logical_camera_sensor.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LogicalCameraSensor struct {
	// / \brief Near clipping plane of the view frustum in meters.
	NearClip *float64 `protobuf:"fixed64,1,req,name=near_clip" json:"near_clip,omitempty"`
	// / \brief Far clipping plane of the view frustum in meters.
	FarClip *float64 `protobuf:"fixed64,2,req,name=far_clip" json:"far_clip,omitempty"`
	// / \brief Horizontal field of view in radians.
	HorizontalFov *float64 `protobuf:"fixed64,3,req,name=horizontal_fov" json:"horizontal_fov,omitempty"`
	// / \brief Near and far clipping plane aspect ratio (width/height).
	AspectRatio      *float64 `protobuf:"fixed64,4,req,name=aspect_ratio" json:"aspect_ratio,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *LogicalCameraSensor) Reset()                    { *m = LogicalCameraSensor{} }
func (m *LogicalCameraSensor) String() string            { return proto.CompactTextString(m) }
func (*LogicalCameraSensor) ProtoMessage()               {}
func (*LogicalCameraSensor) Descriptor() ([]byte, []int) { return fileDescriptor55, []int{0} }

func (m *LogicalCameraSensor) GetNearClip() float64 {
	if m != nil && m.NearClip != nil {
		return *m.NearClip
	}
	return 0
}

func (m *LogicalCameraSensor) GetFarClip() float64 {
	if m != nil && m.FarClip != nil {
		return *m.FarClip
	}
	return 0
}

func (m *LogicalCameraSensor) GetHorizontalFov() float64 {
	if m != nil && m.HorizontalFov != nil {
		return *m.HorizontalFov
	}
	return 0
}

func (m *LogicalCameraSensor) GetAspectRatio() float64 {
	if m != nil && m.AspectRatio != nil {
		return *m.AspectRatio
	}
	return 0
}

func init() {
	proto.RegisterType((*LogicalCameraSensor)(nil), "gazebo.msgs.LogicalCameraSensor")
}

func init() { proto.RegisterFile("logical_camera_sensor.proto", fileDescriptor55) }

var fileDescriptor55 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0xce, 0xc9, 0x4f, 0xcf,
	0x4c, 0x4e, 0xcc, 0x89, 0x4f, 0x4e, 0xcc, 0x4d, 0x2d, 0x4a, 0x8c, 0x2f, 0x4e, 0xcd, 0x2b, 0xce,
	0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f, 0xac, 0x4a, 0x4d, 0xca, 0xd7,
	0xcb, 0x2d, 0x4e, 0x2f, 0x56, 0xca, 0xe0, 0x12, 0xf6, 0x81, 0xa8, 0x75, 0x06, 0x2b, 0x0d, 0x06,
	0xab, 0x14, 0x12, 0xe4, 0xe2, 0xcc, 0x4b, 0x4d, 0x2c, 0x8a, 0x4f, 0xce, 0xc9, 0x2c, 0x90, 0x60,
	0x54, 0x60, 0xd2, 0x60, 0x14, 0x12, 0xe0, 0xe2, 0x48, 0x83, 0x89, 0x30, 0x81, 0x45, 0xc4, 0xb8,
	0xf8, 0x32, 0xf2, 0x8b, 0x32, 0xab, 0xf2, 0xf3, 0x4a, 0x80, 0x56, 0xa5, 0xe5, 0x97, 0x49, 0x30,
	0x83, 0xc5, 0x45, 0xb8, 0x78, 0x12, 0x8b, 0x0b, 0x52, 0x93, 0x4b, 0xe2, 0x8b, 0x12, 0x4b, 0x32,
	0xf3, 0x25, 0x58, 0x40, 0xa2, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x36, 0x24, 0x16, 0x94,
	0x00, 0x00, 0x00,
}
