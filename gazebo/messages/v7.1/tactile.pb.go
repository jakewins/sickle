// Code generated by protoc-gen-go.
// source: tactile.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tactile struct {
	CollisionName    []string  `protobuf:"bytes,1,rep,name=collision_name" json:"collision_name,omitempty"`
	CollisionId      []uint32  `protobuf:"varint,2,rep,name=collision_id" json:"collision_id,omitempty"`
	Pressure         []float64 `protobuf:"fixed64,3,rep,name=pressure" json:"pressure,omitempty"`
	Time             *Time     `protobuf:"bytes,4,req,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Tactile) Reset()                    { *m = Tactile{} }
func (m *Tactile) String() string            { return proto.CompactTextString(m) }
func (*Tactile) ProtoMessage()               {}
func (*Tactile) Descriptor() ([]byte, []int) { return fileDescriptor108, []int{0} }

func (m *Tactile) GetCollisionName() []string {
	if m != nil {
		return m.CollisionName
	}
	return nil
}

func (m *Tactile) GetCollisionId() []uint32 {
	if m != nil {
		return m.CollisionId
	}
	return nil
}

func (m *Tactile) GetPressure() []float64 {
	if m != nil {
		return m.Pressure
	}
	return nil
}

func (m *Tactile) GetTime() *Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*Tactile)(nil), "gazebo.msgs.Tactile")
}

func init() { proto.RegisterFile("tactile.proto", fileDescriptor108) }

var fileDescriptor108 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x49, 0x4c, 0x2e,
	0xc9, 0xcc, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f, 0xac, 0x4a, 0x4d,
	0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x96, 0xe2, 0x2a, 0xc9, 0xcc, 0x85, 0x4a, 0x28, 0x65, 0x71,
	0xb1, 0x87, 0x40, 0x54, 0x0a, 0x89, 0x71, 0xf1, 0x25, 0xe7, 0xe7, 0xe4, 0x64, 0x16, 0x67, 0xe6,
	0xe7, 0xc5, 0xe7, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x0a, 0x89, 0x70, 0xf1,
	0x20, 0xc4, 0x33, 0x53, 0x24, 0x98, 0x80, 0xa2, 0xbc, 0x42, 0x02, 0x5c, 0x1c, 0x05, 0x45, 0xa9,
	0xc5, 0xc5, 0xa5, 0x45, 0xa9, 0x12, 0xcc, 0x40, 0x11, 0x46, 0x21, 0x79, 0x2e, 0x16, 0x90, 0xc1,
	0x12, 0x2c, 0x0a, 0x4c, 0x1a, 0xdc, 0x46, 0x82, 0x7a, 0x48, 0x56, 0xea, 0x85, 0x00, 0x25, 0x00,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xad, 0xda, 0xae, 0x03, 0x94, 0x00, 0x00, 0x00,
}
