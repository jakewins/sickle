// Code generated by protoc-gen-go.
// source: joint_cmd.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type JointCmd struct {
	Name             *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Axis             *int32   `protobuf:"varint,2,opt,name=axis,def=0" json:"axis,omitempty"`
	Force            *float64 `protobuf:"fixed64,3,opt,name=force" json:"force,omitempty"`
	Position         *PID     `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
	Velocity         *PID     `protobuf:"bytes,5,opt,name=velocity" json:"velocity,omitempty"`
	Reset_           *bool    `protobuf:"varint,6,opt,name=reset" json:"reset,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *JointCmd) Reset()                    { *m = JointCmd{} }
func (m *JointCmd) String() string            { return proto.CompactTextString(m) }
func (*JointCmd) ProtoMessage()               {}
func (*JointCmd) Descriptor() ([]byte, []int) { return fileDescriptor43, []int{0} }

const Default_JointCmd_Axis int32 = 0

func (m *JointCmd) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *JointCmd) GetAxis() int32 {
	if m != nil && m.Axis != nil {
		return *m.Axis
	}
	return Default_JointCmd_Axis
}

func (m *JointCmd) GetForce() float64 {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return 0
}

func (m *JointCmd) GetPosition() *PID {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *JointCmd) GetVelocity() *PID {
	if m != nil {
		return m.Velocity
	}
	return nil
}

func (m *JointCmd) GetReset_() bool {
	if m != nil && m.Reset_ != nil {
		return *m.Reset_
	}
	return false
}

func init() {
	proto.RegisterType((*JointCmd)(nil), "gazebo.msgs.JointCmd")
}

func init() { proto.RegisterFile("joint_cmd.proto", fileDescriptor43) }

var fileDescriptor43 = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xca, 0xcf, 0xcc,
	0x2b, 0x89, 0x4f, 0xce, 0x4d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f, 0xac,
	0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x96, 0xe2, 0x2c, 0xc8, 0x84, 0x8a, 0x2b, 0xf5,
	0x33, 0x72, 0x71, 0x78, 0x81, 0xd4, 0x3a, 0xe7, 0xa6, 0x08, 0xf1, 0x70, 0xb1, 0xe4, 0x25, 0xe6,
	0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x69, 0x70, 0x0a, 0xf1, 0x73, 0xb1, 0x24, 0x56, 0x64, 0x16, 0x4b,
	0x30, 0x29, 0x30, 0x6a, 0xb0, 0x5a, 0x31, 0x1a, 0x08, 0xf1, 0x72, 0xb1, 0xa6, 0xe5, 0x17, 0x25,
	0xa7, 0x4a, 0x30, 0x03, 0x45, 0x18, 0x85, 0x94, 0xb8, 0x38, 0x0a, 0xf2, 0x8b, 0x33, 0x4b, 0x32,
	0xf3, 0xf3, 0x24, 0x58, 0x80, 0x22, 0xdc, 0x46, 0x02, 0x7a, 0x48, 0xb6, 0xe8, 0x05, 0x78, 0xba,
	0x80, 0xd4, 0x94, 0xa5, 0xe6, 0xe4, 0x27, 0x67, 0x96, 0x54, 0x4a, 0xb0, 0xe2, 0x50, 0x03, 0x34,
	0xb6, 0x28, 0xb5, 0x38, 0xb5, 0x44, 0x82, 0x0d, 0xa8, 0x80, 0x03, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x16, 0x73, 0x43, 0x30, 0xbb, 0x00, 0x00, 0x00,
}
