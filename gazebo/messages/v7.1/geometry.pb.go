// Code generated by protoc-gen-go.
// source: geometry.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Geometry_Type int32

const (
	Geometry_BOX          Geometry_Type = 1
	Geometry_CYLINDER     Geometry_Type = 2
	Geometry_SPHERE       Geometry_Type = 3
	Geometry_PLANE        Geometry_Type = 4
	Geometry_IMAGE        Geometry_Type = 5
	Geometry_HEIGHTMAP    Geometry_Type = 6
	Geometry_MESH         Geometry_Type = 7
	Geometry_TRIANGLE_FAN Geometry_Type = 8
	Geometry_LINE_STRIP   Geometry_Type = 9
	Geometry_POLYLINE     Geometry_Type = 10
	Geometry_EMPTY        Geometry_Type = 11
)

var Geometry_Type_name = map[int32]string{
	1:  "BOX",
	2:  "CYLINDER",
	3:  "SPHERE",
	4:  "PLANE",
	5:  "IMAGE",
	6:  "HEIGHTMAP",
	7:  "MESH",
	8:  "TRIANGLE_FAN",
	9:  "LINE_STRIP",
	10: "POLYLINE",
	11: "EMPTY",
}
var Geometry_Type_value = map[string]int32{
	"BOX":          1,
	"CYLINDER":     2,
	"SPHERE":       3,
	"PLANE":        4,
	"IMAGE":        5,
	"HEIGHTMAP":    6,
	"MESH":         7,
	"TRIANGLE_FAN": 8,
	"LINE_STRIP":   9,
	"POLYLINE":     10,
	"EMPTY":        11,
}

func (x Geometry_Type) Enum() *Geometry_Type {
	p := new(Geometry_Type)
	*p = x
	return p
}
func (x Geometry_Type) String() string {
	return proto.EnumName(Geometry_Type_name, int32(x))
}
func (x *Geometry_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Geometry_Type_value, data, "Geometry_Type")
	if err != nil {
		return err
	}
	*x = Geometry_Type(value)
	return nil
}
func (Geometry_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor24, []int{0, 0} }

type Geometry struct {
	Type             *Geometry_Type `protobuf:"varint,1,opt,name=type,enum=gazebo.msgs.Geometry_Type" json:"type,omitempty"`
	Box              *BoxGeom       `protobuf:"bytes,2,opt,name=box" json:"box,omitempty"`
	Cylinder         *CylinderGeom  `protobuf:"bytes,3,opt,name=cylinder" json:"cylinder,omitempty"`
	Plane            *PlaneGeom     `protobuf:"bytes,4,opt,name=plane" json:"plane,omitempty"`
	Sphere           *SphereGeom    `protobuf:"bytes,5,opt,name=sphere" json:"sphere,omitempty"`
	Image            *ImageGeom     `protobuf:"bytes,6,opt,name=image" json:"image,omitempty"`
	Heightmap        *HeightmapGeom `protobuf:"bytes,7,opt,name=heightmap" json:"heightmap,omitempty"`
	Mesh             *MeshGeom      `protobuf:"bytes,8,opt,name=mesh" json:"mesh,omitempty"`
	Points           []*Vector3D    `protobuf:"bytes,9,rep,name=points" json:"points,omitempty"`
	Polyline         []*Polyline    `protobuf:"bytes,10,rep,name=polyline" json:"polyline,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Geometry) Reset()                    { *m = Geometry{} }
func (m *Geometry) String() string            { return proto.CompactTextString(m) }
func (*Geometry) ProtoMessage()               {}
func (*Geometry) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

func (m *Geometry) GetType() Geometry_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Geometry_BOX
}

func (m *Geometry) GetBox() *BoxGeom {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *Geometry) GetCylinder() *CylinderGeom {
	if m != nil {
		return m.Cylinder
	}
	return nil
}

func (m *Geometry) GetPlane() *PlaneGeom {
	if m != nil {
		return m.Plane
	}
	return nil
}

func (m *Geometry) GetSphere() *SphereGeom {
	if m != nil {
		return m.Sphere
	}
	return nil
}

func (m *Geometry) GetImage() *ImageGeom {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Geometry) GetHeightmap() *HeightmapGeom {
	if m != nil {
		return m.Heightmap
	}
	return nil
}

func (m *Geometry) GetMesh() *MeshGeom {
	if m != nil {
		return m.Mesh
	}
	return nil
}

func (m *Geometry) GetPoints() []*Vector3D {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *Geometry) GetPolyline() []*Polyline {
	if m != nil {
		return m.Polyline
	}
	return nil
}

func init() {
	proto.RegisterType((*Geometry)(nil), "gazebo.msgs.Geometry")
	proto.RegisterEnum("gazebo.msgs.Geometry_Type", Geometry_Type_name, Geometry_Type_value)
}

func init() { proto.RegisterFile("geometry.proto", fileDescriptor24) }

var fileDescriptor24 = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xdf, 0x6e, 0x9b, 0x30,
	0x18, 0xc5, 0x95, 0x42, 0x08, 0x7c, 0x69, 0x33, 0xcb, 0xfb, 0xe7, 0xe5, 0xaa, 0xeb, 0x34, 0xad,
	0xd2, 0x34, 0x2e, 0xba, 0x27, 0xa0, 0x9d, 0x07, 0x48, 0x40, 0xad, 0x80, 0xa6, 0xf5, 0xaa, 0xa2,
	0xad, 0x05, 0x48, 0x21, 0x46, 0x80, 0xa6, 0x66, 0xaf, 0xb1, 0x67, 0xd9, 0xfb, 0x0d, 0xbb, 0x30,
	0x81, 0x9a, 0xbb, 0xe4, 0x9c, 0x9f, 0xbe, 0xc3, 0x39, 0x86, 0x55, 0xc6, 0x45, 0xc9, 0xdb, 0x7a,
	0x6f, 0x57, 0xb5, 0x68, 0x05, 0x5e, 0x66, 0xe9, 0x6f, 0x7e, 0x27, 0xec, 0xb2, 0xc9, 0x9a, 0xf5,
	0xc9, 0x9d, 0x78, 0x94, 0xfe, 0x93, 0xb7, 0xc6, 0xf7, 0xfb, 0x6d, 0xb1, 0x7b, 0xe0, 0xf5, 0x48,
	0x43, 0x4d, 0x95, 0xf3, 0x9a, 0x8f, 0x94, 0x17, 0xd5, 0x36, 0xdd, 0x4d, 0x84, 0xa2, 0x4c, 0xb3,
	0xb1, 0xf0, 0x32, 0xe7, 0x45, 0x96, 0xb7, 0x65, 0x5a, 0x8d, 0xc4, 0x55, 0xc9, 0x9b, 0x7c, 0xfc,
	0xff, 0x17, 0xbf, 0x6f, 0x45, 0xfd, 0xf5, 0x61, 0x08, 0xaf, 0xc4, 0x56, 0xc6, 0x8f, 0x0e, 0x9d,
	0xfd, 0xd5, 0xc1, 0x74, 0xfb, 0xef, 0xc7, 0xe7, 0xa0, 0xb7, 0xfb, 0x8a, 0x93, 0xd9, 0xe9, 0xec,
	0x7c, 0x75, 0xb1, 0xb6, 0x47, 0x45, 0xec, 0x01, 0xb2, 0x93, 0x8e, 0xc0, 0xef, 0x41, 0xeb, 0x8a,
	0x91, 0xa3, 0x0e, 0x5c, 0x5e, 0xbc, 0x9a, 0x80, 0x97, 0xe2, 0x51, 0xb2, 0xf8, 0x33, 0x98, 0x43,
	0x59, 0xa2, 0x29, 0xee, 0xdd, 0x84, 0xbb, 0xea, 0x4d, 0x05, 0x7f, 0x84, 0xb9, 0xea, 0x4c, 0x74,
	0x45, 0xbe, 0x99, 0x90, 0x4c, 0x3a, 0x0a, 0xfb, 0x04, 0xc6, 0xd3, 0x58, 0x64, 0xae, 0xb8, 0xb7,
	0x13, 0x2e, 0x56, 0xd6, 0x70, 0x4f, 0x4d, 0x46, 0x8c, 0x03, 0xf7, 0x7c, 0xe9, 0x28, 0xec, 0x0b,
	0x58, 0xff, 0x87, 0x24, 0x0b, 0x85, 0x4e, 0x5b, 0x7b, 0x83, 0xab, 0xf0, 0x0f, 0xa0, 0xcb, 0x89,
	0x89, 0xa9, 0xc8, 0xd7, 0x13, 0x32, 0xec, 0x8c, 0x3e, 0xda, 0xa8, 0x44, 0xb1, 0x6b, 0x1b, 0x62,
	0x9d, 0x6a, 0xcf, 0xb0, 0x1f, 0xfd, 0x93, 0x74, 0x55, 0xcc, 0xe1, 0x39, 0x08, 0x1c, 0x00, 0x59,
	0x6f, 0x9e, 0xfd, 0x99, 0x81, 0xae, 0x36, 0x5f, 0x80, 0x76, 0x79, 0xfd, 0x13, 0xcd, 0xf0, 0x31,
	0x98, 0x57, 0x37, 0x81, 0x1f, 0x7d, 0xa3, 0x1b, 0x74, 0x84, 0x01, 0x8c, 0x98, 0x79, 0x74, 0x43,
	0x91, 0x86, 0x2d, 0x98, 0xb3, 0xc0, 0x89, 0x28, 0xd2, 0xe5, 0x4f, 0x3f, 0x74, 0x5c, 0x8a, 0xe6,
	0xf8, 0x04, 0x2c, 0x8f, 0xfa, 0xae, 0x97, 0x84, 0x0e, 0x43, 0x06, 0x36, 0x41, 0x0f, 0x69, 0xec,
	0xa1, 0x05, 0x46, 0x70, 0x9c, 0x6c, 0x7c, 0x27, 0x72, 0x03, 0x7a, 0xfb, 0xdd, 0x89, 0x90, 0x89,
	0x57, 0x00, 0xdd, 0x61, 0x7a, 0x1b, 0x77, 0x3a, 0x43, 0x96, 0x8c, 0x62, 0xd7, 0x81, 0x0c, 0xa3,
	0x08, 0xe4, 0x4d, 0x1a, 0xb2, 0xe4, 0x06, 0x2d, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x75, 0x74,
	0x76, 0x38, 0xf5, 0x02, 0x00, 0x00,
}
