// Code generated by protoc-gen-go.
// source: hydra.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Hydra struct {
	// Info for the right paddle
	Right *Hydra_Paddle `protobuf:"bytes,1,req,name=right" json:"right,omitempty"`
	// Info for the left paddle
	Left             *Hydra_Paddle `protobuf:"bytes,2,req,name=left" json:"left,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Hydra) Reset()                    { *m = Hydra{} }
func (m *Hydra) String() string            { return proto.CompactTextString(m) }
func (*Hydra) ProtoMessage()               {}
func (*Hydra) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{0} }

func (m *Hydra) GetRight() *Hydra_Paddle {
	if m != nil {
		return m.Right
	}
	return nil
}

func (m *Hydra) GetLeft() *Hydra_Paddle {
	if m != nil {
		return m.Left
	}
	return nil
}

type Hydra_Paddle struct {
	// Pose of the paddle
	Pose *Pose `protobuf:"bytes,1,req,name=pose" json:"pose,omitempty"`
	// The button labeled LB
	ButtonBumper *bool `protobuf:"varint,2,req,name=button_bumper" json:"button_bumper,omitempty"`
	// Button 1
	Button_1 *bool `protobuf:"varint,3,req,name=button_1" json:"button_1,omitempty"`
	// Button 2
	Button_2 *bool `protobuf:"varint,4,req,name=button_2" json:"button_2,omitempty"`
	// Button 3
	Button_3 *bool `protobuf:"varint,5,req,name=button_3" json:"button_3,omitempty"`
	// Button 4
	Button_4 *bool `protobuf:"varint,6,req,name=button_4" json:"button_4,omitempty"`
	// Button that is activated by pressing down on the joystick.
	ButtonJoy *bool `protobuf:"varint,7,req,name=button_joy" json:"button_joy,omitempty"`
	// The button located between button 1 and 2.
	ButtonCenter *bool `protobuf:"varint,8,req,name=button_center" json:"button_center,omitempty"`
	// Range(-1, 1) where -1 == back, and +1 == forward.
	JoyX *float64 `protobuf:"fixed64,9,req,name=joy_x" json:"joy_x,omitempty"`
	// Range(-1, 1) where -1 == left, and +1 == right.
	JoyY *float64 `protobuf:"fixed64,10,req,name=joy_y" json:"joy_y,omitempty"`
	// Range(0, 1) where 0 is no press, and 1 is full press.
	Trigger          *float64 `protobuf:"fixed64,11,req,name=trigger" json:"trigger,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Hydra_Paddle) Reset()                    { *m = Hydra_Paddle{} }
func (m *Hydra_Paddle) String() string            { return proto.CompactTextString(m) }
func (*Hydra_Paddle) ProtoMessage()               {}
func (*Hydra_Paddle) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{0, 0} }

func (m *Hydra_Paddle) GetPose() *Pose {
	if m != nil {
		return m.Pose
	}
	return nil
}

func (m *Hydra_Paddle) GetButtonBumper() bool {
	if m != nil && m.ButtonBumper != nil {
		return *m.ButtonBumper
	}
	return false
}

func (m *Hydra_Paddle) GetButton_1() bool {
	if m != nil && m.Button_1 != nil {
		return *m.Button_1
	}
	return false
}

func (m *Hydra_Paddle) GetButton_2() bool {
	if m != nil && m.Button_2 != nil {
		return *m.Button_2
	}
	return false
}

func (m *Hydra_Paddle) GetButton_3() bool {
	if m != nil && m.Button_3 != nil {
		return *m.Button_3
	}
	return false
}

func (m *Hydra_Paddle) GetButton_4() bool {
	if m != nil && m.Button_4 != nil {
		return *m.Button_4
	}
	return false
}

func (m *Hydra_Paddle) GetButtonJoy() bool {
	if m != nil && m.ButtonJoy != nil {
		return *m.ButtonJoy
	}
	return false
}

func (m *Hydra_Paddle) GetButtonCenter() bool {
	if m != nil && m.ButtonCenter != nil {
		return *m.ButtonCenter
	}
	return false
}

func (m *Hydra_Paddle) GetJoyX() float64 {
	if m != nil && m.JoyX != nil {
		return *m.JoyX
	}
	return 0
}

func (m *Hydra_Paddle) GetJoyY() float64 {
	if m != nil && m.JoyY != nil {
		return *m.JoyY
	}
	return 0
}

func (m *Hydra_Paddle) GetTrigger() float64 {
	if m != nil && m.Trigger != nil {
		return *m.Trigger
	}
	return 0
}

func init() {
	proto.RegisterType((*Hydra)(nil), "gazebo.msgs.Hydra")
	proto.RegisterType((*Hydra_Paddle)(nil), "gazebo.msgs.Hydra.Paddle")
}

func init() { proto.RegisterFile("hydra.proto", fileDescriptor33) }

var fileDescriptor33 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4e, 0x86, 0x30,
	0x10, 0x85, 0x03, 0xd2, 0x1f, 0x9c, 0x86, 0xa8, 0x4d, 0x4c, 0x46, 0x36, 0x1a, 0x37, 0xb2, 0x6a,
	0x22, 0x7a, 0x08, 0x97, 0xdc, 0x80, 0x80, 0xd4, 0xa2, 0x01, 0x4a, 0x4a, 0x49, 0xc4, 0xcb, 0x79,
	0x17, 0x4f, 0x62, 0xa9, 0x35, 0x2a, 0x1b, 0x97, 0xef, 0xeb, 0xf7, 0xe6, 0x25, 0x05, 0xda, 0xad,
	0xad, 0xae, 0xf9, 0xa4, 0x95, 0x51, 0x8c, 0xca, 0xfa, 0x4d, 0x34, 0x8a, 0x0f, 0xb3, 0x9c, 0x33,
	0x98, 0xd4, 0x2c, 0xbe, 0x1e, 0xae, 0xdf, 0x43, 0x20, 0x0f, 0x9b, 0xc8, 0x72, 0x20, 0xfa, 0x59,
	0x76, 0x06, 0x83, 0xab, 0x30, 0xa7, 0xc5, 0x05, 0xff, 0x55, 0xe1, 0x4e, 0xe1, 0x65, 0xdd, 0xb6,
	0xbd, 0x60, 0x37, 0x10, 0xf5, 0xe2, 0xc9, 0x60, 0xf8, 0x8f, 0x98, 0x7d, 0x04, 0x70, 0xf0, 0x9d,
	0x4b, 0x88, 0xb6, 0x55, 0x7f, 0xfc, 0xec, 0x4f, 0xa7, 0xb4, 0x0f, 0xec, 0x1c, 0xd2, 0x66, 0x31,
	0x46, 0x8d, 0x55, 0xb3, 0x0c, 0x93, 0xd0, 0xee, 0x7a, 0xc2, 0x4e, 0x21, 0xf1, 0xf8, 0x16, 0x8f,
	0x76, 0xa4, 0xc0, 0x68, 0x47, 0xee, 0x90, 0xec, 0xc8, 0x3d, 0x1e, 0x1c, 0x61, 0x00, 0x9e, 0xbc,
	0xa8, 0x15, 0x63, 0xc7, 0x7e, 0x26, 0x1f, 0xc5, 0x68, 0xec, 0x64, 0xe2, 0x70, 0x0a, 0xc4, 0x3a,
	0xd5, 0x2b, 0x1e, 0xdb, 0x18, 0x7c, 0xc7, 0x15, 0xc1, 0xc5, 0x13, 0x88, 0x8d, 0xfd, 0x27, 0x69,
	0x75, 0xba, 0x81, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0x00, 0x1d, 0xa3, 0x68, 0x01, 0x00,
	0x00,
}
