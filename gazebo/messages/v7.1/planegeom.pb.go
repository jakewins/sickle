// Code generated by protoc-gen-go.
// source: planegeom.proto
// DO NOT EDIT!

package gazebo_msgs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PlaneGeom struct {
	Normal           *Vector3D `protobuf:"bytes,1,req,name=normal" json:"normal,omitempty"`
	Size             *Vector2D `protobuf:"bytes,2,req,name=size" json:"size,omitempty"`
	D                *float64  `protobuf:"fixed64,3,opt,name=d,def=0" json:"d,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *PlaneGeom) Reset()                    { *m = PlaneGeom{} }
func (m *PlaneGeom) String() string            { return proto.CompactTextString(m) }
func (*PlaneGeom) ProtoMessage()               {}
func (*PlaneGeom) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{0} }

const Default_PlaneGeom_D float64 = 0

func (m *PlaneGeom) GetNormal() *Vector3D {
	if m != nil {
		return m.Normal
	}
	return nil
}

func (m *PlaneGeom) GetSize() *Vector2D {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *PlaneGeom) GetD() float64 {
	if m != nil && m.D != nil {
		return *m.D
	}
	return Default_PlaneGeom_D
}

func init() {
	proto.RegisterType((*PlaneGeom)(nil), "gazebo.msgs.PlaneGeom")
}

func init() { proto.RegisterFile("planegeom.proto", fileDescriptor70) }

var fileDescriptor70 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xc8, 0x49, 0xcc,
	0x4b, 0x4d, 0x4f, 0xcd, 0xcf, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x4f, 0xac,
	0x4a, 0x4d, 0xca, 0xd7, 0xcb, 0x2d, 0x4e, 0x2f, 0x96, 0xe2, 0x2b, 0x4b, 0x4d, 0x2e, 0xc9, 0x2f,
	0x32, 0x4e, 0x81, 0x48, 0xc2, 0xf8, 0x46, 0x50, 0xbe, 0x52, 0x2a, 0x17, 0x67, 0x00, 0x48, 0xbf,
	0x3b, 0x50, 0xbf, 0x90, 0x2a, 0x17, 0x5b, 0x5e, 0x7e, 0x51, 0x6e, 0x62, 0x8e, 0x04, 0xa3, 0x02,
	0x93, 0x06, 0xb7, 0x91, 0xa8, 0x1e, 0x92, 0x51, 0x7a, 0x61, 0x50, 0x93, 0x84, 0x94, 0xb9, 0x58,
	0x8a, 0x33, 0xab, 0x52, 0x25, 0x98, 0x70, 0x2a, 0x32, 0x4a, 0x11, 0xe2, 0xe1, 0x62, 0x4c, 0x91,
	0x60, 0x56, 0x60, 0xd4, 0x60, 0xb4, 0x62, 0x34, 0x00, 0x04, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x79,
	0x3b, 0xe6, 0xa5, 0x00, 0x00, 0x00,
}
